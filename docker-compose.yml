version: '3.8'

services:
  qrcode-server:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: qrcode-detection-server
    ports:
      - "3000:3000"
    environment:
      - RUST_LOG=info
      - RUST_BACKTRACE=1
      - PORT=3000              # 服务端口
      - CONTEXT_PATH=/          # HTTP上下文路径，可以改为 /qrcode 等自定义路径
      - POOL_INITIAL_SIZE=10    # 对象池初始大小
      - POOL_MAX_SIZE=50        # 对象池最大大小
      # 示例配置:
      # - PORT=8080
      # - CONTEXT_PATH=/api/qrcode
      # - POOL_INITIAL_SIZE=20
      # - POOL_MAX_SIZE=100
    volumes:
      # 可选：挂载日志目录
      - ./logs:/app/logs
      # 可选：挂载配置文件
      # - ./config:/app/config:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    networks:
      - qrcode-network
    # 资源限制
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M

  # 可选：添加nginx反向代理
  nginx:
    image: nginx:alpine
    container_name: qrcode-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./ssl:/etc/nginx/ssl:ro  # SSL证书
    depends_on:
      - qrcode-server
    restart: unless-stopped
    networks:
      - qrcode-network

networks:
  qrcode-network:
    driver: bridge

volumes:
  qrcode-logs:
    driver: local
